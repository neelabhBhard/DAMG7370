{
	"name": "LOADINGDIM_2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DIMPART2",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "IMPORTINGCUSTDIM",
						"type": "DatasetReference"
					},
					"name": "CUSTDIM2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "IMPORTINGCUSTDIM",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     PID as string (\"59\")",
				"}",
				"source(output(",
				"          customerid as string,",
				"          CustomerName as string,",
				"          billTo as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          MAXCUSTSK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(customer_sk),0) as MaxcustSK FROM TEMP_SCHEMA.dim_customer',",
				"     format: 'query') ~> CUSTDIM2",
				"source1, CUSTDIM2 join(1 == 1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(MAXCUSTSK,",
				"          customerid,",
				"          CustomerName),",
				"     Count = count(customerid)) ~> aggregate1",
				"aggregate1 keyGenerate(output(ROWNUM as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(CUSTOMER_SK = MAXCUSTSK +ROWNUM,",
				"          DI_CreatedDt = currentDate(),",
				"          PID = $PID) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as string,",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as date,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_SK,",
				"          CUSTOMER_ID = customerid,",
				"          CUSTOMER_NAME = CustomerName,",
				"          DI_CREATEDDT = DI_CreatedDt,",
				"          PID",
				"     )) ~> sink1"
			]
		}
	}
}