{
	"name": "CUST_FACT_POPULATE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SALESSTAGE",
						"type": "DatasetReference"
					},
					"name": "SALESSTG"
				},
				{
					"dataset": {
						"referenceName": "FACTPOPULATEINVOICE",
						"type": "DatasetReference"
					},
					"name": "FACTINVOICE"
				},
				{
					"dataset": {
						"referenceName": "IMPORTINGORPHAN",
						"type": "DatasetReference"
					},
					"name": "ORPHAN"
				},
				{
					"dataset": {
						"referenceName": "IMPORTINGCUSTDIM",
						"type": "DatasetReference"
					},
					"name": "CUSTDIM"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable8",
						"type": "DatasetReference"
					},
					"name": "ORPHANSINK"
				}
			],
			"transformations": [
				{
					"name": "MERGE"
				},
				{
					"name": "join1"
				},
				{
					"name": "VALIDSINK"
				},
				{
					"name": "select1"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     PID as string (\"59\")",
				"}",
				"source(output(",
				"          INVOICEID as string,",
				"          CUSTOMERID as string,",
				"          INVOICEDATE as date,",
				"          SHIPTO as string,",
				"          SHIPTOCITY as string,",
				"          SHIPTOCOUNTRY as string,",
				"          SALESPERSONID as string,",
				"          SALESPERSONNAME as string,",
				"          TOTALPRODUCTCOUNT as decimal(10,4),",
				"          TOTAL as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SALESSTG",
				"source(output(",
				"          MAXINVOICESK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(invoice_sk),0) as MaxinvoiceSK FROM TEMP_SCHEMA.fct_invoice',",
				"     format: 'query') ~> FACTINVOICE",
				"source(output(",
				"          INVOICE_SK as decimal(38,0),",
				"          INVOICE_ID as string,",
				"          CUSTOMER_SK as decimal(38,0),",
				"          INVOICE_DT as date,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL_PRODUCT_COST as decimal(10,4),",
				"          DI_CREATEDDT as date,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ORPHAN",
				"source(output(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as string,",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as date,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> CUSTDIM",
				"SALESSTG, ORPHAN union(byName: true)~> MERGE",
				"MERGE, CUSTDIM join(CUSTOMERID == CUSTOMER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 split(isNull(CUSTOMER_ID),",
				"     disjoint: false) ~> VALIDSINK@(ORPHAN, VALID)",
				"VALIDSINK@VALID select(mapColumn(",
				"          INVOICEID,",
				"          INVOICEDATE,",
				"          TOTAL,",
				"          TOTAL_PRODUCT_CNT = TOTALPRODUCTCOUNT,",
				"          CUSTOMER_SK = VALIDSINK@VALID@CUSTOMER_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, FACTINVOICE join(1 == 1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"surrogateKey1 derive(INVOICE_SK = MAXINVOICESK + ROWNUM,",
				"          DI_CreatedDT = currentDate(),",
				"          PID = $PID) ~> derivedColumn1",
				"join2 keyGenerate(output(ROWNUM as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"VALIDSINK@ORPHAN sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          INVOICE_SK as decimal(38,0),",
				"          INVOICE_ID as string,",
				"          CUSTOMER_SK as decimal(38,0),",
				"          INVOICE_DT as date,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL_PRODUCT_COST as decimal(10,4),",
				"          DI_CREATEDDT as date,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          INVOICE_SK,",
				"          INVOICE_ID,",
				"          CUSTOMER_SK = VALIDSINK@ORPHAN@CUSTOMER_SK,",
				"          INVOICE_DT,",
				"          TOTAL_PRODUCT_CNT,",
				"          TOTAL_PRODUCT_COST,",
				"          DI_CREATEDDT = VALIDSINK@ORPHAN@DI_CREATEDDT,",
				"          PID = VALIDSINK@ORPHAN@PID",
				"     )) ~> ORPHANSINK"
			]
		}
	}
}